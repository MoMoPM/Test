openapi: 3.0.3
info:
  title: movieAPI
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/register:
    post:
      summary: 'Registration Req'
      operationId: registrationReq
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must be at least 4 characters.'
                  example: nwsrlntlowjfxuibzpuppczgrxare
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: isaiah.kunze@example.net
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'm2s-]4}}JuOU7~,'
              required:
                - name
                - email
                - password
      security: []
  /api/login:
    post:
      summary: 'Login Req'
      operationId: loginReq
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/logout:
    post:
      summary: ''
      operationId: postApiLogout
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/get-user:
    get:
      summary: ''
      operationId: getApiGetUser
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/movies:
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: ijmvhz
                summary:
                  type: string
                  description: 'Must not be greater than 200 characters.'
                  example: x
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                rating:
                  type: number
                  description: 'Must be at least 3. Must not be greater than 8.'
                  example: 3
                link:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: fy
                genres:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: string
                authors:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: string
                tags:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: string
              required:
                - title
                - summary
                - image
                - link
      security: []
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  movies:
                    current_page: 1
                    data:
                      -
                        id: 29
                        title: 'If I stay'
                        summary: 'movie summary'
                        image: 1674386067.jpg
                        rating: '4'
                        link: www.youtube.com
                        created_at: '2023-01-22T12:41:12.000000Z'
                        updated_at: '2023-01-22T12:41:12.000000Z'
                        genres: []
                        authors: []
                        tags: []
                    first_page_url: 'http://localhost/api/movies?page=1'
                    from: 1
                    last_page: 5
                    last_page_url: 'http://localhost/api/movies?page=5'
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://localhost/api/movies?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'http://localhost/api/movies?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'http://localhost/api/movies?page=3'
                        label: '3'
                        active: false
                      -
                        url: 'http://localhost/api/movies?page=4'
                        label: '4'
                        active: false
                      -
                        url: 'http://localhost/api/movies?page=5'
                        label: '5'
                        active: false
                      -
                        url: 'http://localhost/api/movies?page=2'
                        label: 'Next &raquo;'
                        active: false
                    next_page_url: 'http://localhost/api/movies?page=2'
                    path: 'http://localhost/api/movies'
                    per_page: 1
                    prev_page_url: null
                    to: 1
                    total: 5
                properties:
                  movies:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        example:
                          -
                            id: 29
                            title: 'If I stay'
                            summary: 'movie summary'
                            image: 1674386067.jpg
                            rating: '4'
                            link: www.youtube.com
                            created_at: '2023-01-22T12:41:12.000000Z'
                            updated_at: '2023-01-22T12:41:12.000000Z'
                            genres: []
                            authors: []
                            tags: []
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 29
                            title:
                              type: string
                              example: 'If I stay'
                            summary:
                              type: string
                              example: 'movie summary'
                            image:
                              type: string
                              example: 1674386067.jpg
                            rating:
                              type: string
                              example: '4'
                            link:
                              type: string
                              example: www.youtube.com
                            created_at:
                              type: string
                              example: '2023-01-22T12:41:12.000000Z'
                            updated_at:
                              type: string
                              example: '2023-01-22T12:41:12.000000Z'
                            genres:
                              type: array
                              example: []
                            authors:
                              type: array
                              example: []
                            tags:
                              type: array
                              example: []
                      first_page_url:
                        type: string
                        example: 'http://localhost/api/movies?page=1'
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 5
                      last_page_url:
                        type: string
                        example: 'http://localhost/api/movies?page=5'
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://localhost/api/movies?page=1'
                            label: '1'
                            active: true
                          -
                            url: 'http://localhost/api/movies?page=2'
                            label: '2'
                            active: false
                          -
                            url: 'http://localhost/api/movies?page=3'
                            label: '3'
                            active: false
                          -
                            url: 'http://localhost/api/movies?page=4'
                            label: '4'
                            active: false
                          -
                            url: 'http://localhost/api/movies?page=5'
                            label: '5'
                            active: false
                          -
                            url: 'http://localhost/api/movies?page=2'
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        example: 'http://localhost/api/movies?page=2'
                      path:
                        type: string
                        example: 'http://localhost/api/movies'
                      per_page:
                        type: integer
                        example: 1
                      prev_page_url:
                        type: string
                        example: null
                      to:
                        type: integer
                        example: 1
                      total:
                        type: integer
                        example: 5
      tags:
        - Endpoints
      security: []
  '/api/movies/{id}':
    post:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: gugrjsleknbb
                summary:
                  type: string
                  description: 'Must not be greater than 200 characters.'
                  example: skaqphrtoyoat
                image:
                  type: string
                  format: binary
                  description: 'Must be an image. Must not be greater than 2048 kilobytes.'
                rating:
                  type: number
                  description: 'Must be at least 3. Must not be greater than 8.'
                  example: 7
                link:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: ylyclvqcdqwvypdecg
                genres:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: string
                authors:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: string
                tags:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: string
              required:
                - summary
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    get:
      summary: 'Get movie by ID'
      operationId: getMovieByID
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  data: null
                  comments: []
                properties:
                  status:
                    type: integer
                    example: 200
                  data:
                    type: string
                    example: null
                  comments:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the movie.'
        example: similique
        required: true
        schema:
          type: string
  /api/comments:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: hermiston.alvis@example.net
                comment:
                  type: string
                  description: 'Must be at least 8 characters. Must not be greater than  100 characters.'
                  example: michfetsxxcdrwe
                movie_id:
                  type: number
                  description: ''
                  example: 9074.9733334
              required:
                - email
                - comment
                - movie_id
      security: []
  '/api/comments/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: 17
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
